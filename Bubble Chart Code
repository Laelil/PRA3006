<!DOCTYPE html>
<html lang="en">
	<head>
		<title>BubbleChart Example</title>
		<!-- Import D3 visulaization library -->
		<script src="https://d3js.org/d3.v4.min.js"></script>

	</head>
	
	<body>		
		<div id="chart">
		</div>
		
		<script>
			dataset = [ {protein: "Drug Classes", count: 10},
						{protein: "Drug Targets", count: 10},
						{protein: "Biological Mechanisms", count: 10},
						{protein: "Symptoms", count: 10}];
						
			data = {};
			// restructure the asyncrounos response by creating a map of protein names and PDB counts
			data.children = dataset.map(function(item) { return { "Name": item.protein , "Count": item.count } });

			var width = 1200;
			var height = 800;
			
			// Create the main SVG element
			var svg = d3.select('#chart').append('svg')
					  .attr('width', width)
					  .attr('height', height)
					  .attr('transform', 'translate(0,0)');

			var color = d3.scaleOrdinal(d3.schemeCategory20);
			
			// create a tooltip
  			var Tooltip = d3.select("#my_dataviz")
    			.append("div")
    			.style("opacity", 0)
    			.attr("class", "tooltip")
    			.style("background-color", "white")
    			.style("border", "solid")
    			.style("border-width", "2px")
    			.style("border-radius", "5px")
    			.style("padding", "5px")
			
			// Three function that change the tooltip when user hover / move / leave a cell
  			var mouseover = function(d) {
   			 Tooltip
      			.style("opacity", 1)
 			 }
 			 var mousemove = function(d) {
  			  Tooltip
    			  .html('<u>' + d.key + '</u>' + "<br>" + d.value + " inhabitants")
     			 .style("left", (d3.mouse(this)[0]+20) + "px")
     			 .style("top", (d3.mouse(this)[1]) + "px")
 			 }
 			 var mouseleave = function(d) {
   			 Tooltip
    			  .style("opacity", 0)
 			 }

			// Create a new structure from the data where each element has coordinates corresponds
			// to the size of the holding SVG
			var bubble = d3.pack(data)
					  .size([height, height])
					  .padding(5);

			var nodes = d3.hierarchy(data)
					  .sum(function(d) { return d.Count; });
				
				

			// Create the bubbles
			circles = svg.selectAll("g")
					.data(bubble(nodes).descendants())
					.enter()
					.filter(function(d){
					  return  !d.children
					})
					.append("g")
					.attr("transform", function(d) {
					  return "translate(" + d.x + "," + d.y + ")";
					})

			circles.append("circle")
					.attr("r", function(d) {
						  return d.r;
					})
					.style("fill", function(d,i) {
						  return color(i);
					})

			// Add the text to the bubbles
			circles.append("text")
					.style("text-anchor", "middle")
					.attr("font-family", "sans-serif")
					.attr("font-size", function(d){
						return d.r/8;
					})
					.text(function(d) {
						return d.data.Name.substring(0, d.r / 3);
					});


		</script>

	</body>
</html>
